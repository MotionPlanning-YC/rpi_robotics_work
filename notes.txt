Notes.txt - Last Updated: 2/7/14 - 3:35 PM

ROS Arduino Serial Bridge:
http://wiki.ros.org/ros_arduino_bridge

	Prequisites:
		Python Serial (ALREADY INSTALLED):
			sudo apt-get install python-serial

Installing Powerball Software (ROS Groovy):

	Clone the software repositories from Github:
	git clone https://github.com/ipa320/schunk_robots.git - VALIDATED
	git clone https://github.com/ipa320/schunk_modular_robotics.git	- VALIDATED


	rosinstall . https://raw.github.com/ipa320/schunk_robots/groovy_dev/groovy.rosinstall

	In .rosinstall, copy/paste content from /opt/ros/groovy/.rosinstall into the top of the .rosinstall

	Additional Packages:
	--------------------
	sudo apt-get install ros-groovy-pr2-controllers
	sudo apt-get install ros-groovy-pr2-kinematics	
	sudo apt-get install ros-groovy-audio-common
	sudo apt-get install ros-groovy-diagnostics-monitors
	sudo apt-get install ros-groovy-pr2-power-drivers
	sudo apt-get install ros-groovy-rqt-pr2-dashboard
	sudo apt-get install ros-groovy-pr2-teleop-app

	Powerball Arm is renamed to "lwap"

10/23/13 Notes
--------------
- On Windows 7 Machine - Rishab's Account:
	- Installed Optitrack Motive software
	- To get the cameras working, plug the OptiTrack Hardware key on the FRONT LEFT USB Port
	- Camera hub should be plugge in the FRONT RIGHT USB Port 
	- Data can be saved as a .csv file (comma-separated file) for easy parsing

- Mocap Optitrack ROS node:
	http://wiki.ros.org/mocap_optitrack
	- Very well supported (Clearpath Robotics, 2013)

11/8/13 Notes
-------------
- Mocap Optitrack ROS Node:
	- Requires ROS to be running in a virtual machine or on a second computer
	- How to use Motive Software?  

- Inverse Kinematics Solution:
	- To run, create a 4 x 4 matrix named T06 and a 1 x 6 matrix named th_p
	- Call: powerball_inverse_kinematics(T06, th_p)

11/13/13 Notes
--------------
- positions/velocities data found in rostopic /powerball_controller/state
- Torque control + safeguard nodes - FUTURE

1/22/14 Notes
-------------
- ach compiled and installed
- socanmatic compiled and installed
- amino compiled and installed

1/23/14
-------
- Removed all packages compiled from source
- For ach:
	In /etc/apt/sources.list:
	deb http://code.golems.org/debian precise golems.org

	sudo apt-get update && sudo apt-get install libach-dev ach-utils
	sudo dpkg-reconfigure ach-utils

1/27/14
-------

All libraries from source are installed in /usr/local/lib

- Removed Golems PPA from /etc/apt/sources.list
- Built socanmatic and installed from source - verified
- Built ach and installed from source - verified
- Built amino and installed from source - verified
- Built reflex and installed from source - verified
    - use ./configure --prefix=/usr/local FCFLAGS="-I/usr/local/include" 
- Removed all packages from source
- In /home/powerball, created the following directories:
    - share
        - config.site 

- socanmatic installed in /home/powerball/lib
- ach installed in /home/powerball/lib
- amino installed in /home/powerball/lib
- reflex installed in /home/powerball/lib

1/29/14
-------
- Change BLAS Implementation to ATLAS (libatlas-base-dev)

1/30/14
-------
- FRESH START on GA Tech Port
- FRESH GIT CLONES
- Powerball Libraries now installed into:

/home/powerball/powerball_libraries/lib

Prefix: /home/powerball/powerball_libraries

1) Install Socanmatic Driver:

autoreconf -i
./configure --prefix /home/powerball/powerball_libraries
make
sudo make install

2) Install ACH:

autoreconf -i
./configure --prefix /home/powerball/powerball_libraries
make
sudo make install

3) Install Amino:

autoreconf -i
./configure --prefix /home/powerball/powerball_libraries
make
sudo make install

4) Install Reflex:

autoreconf -i
./configure --prefix /home/powerball/powerball_libraries
make
sudo make install

5) Install SNS:

autoreconf -i

1/31/14
-------
Installed ACH from DEB package
- sudo apt-get install libach1 libach-dev

All other packages come from golems repo

./configure
make
sudo make install

2/3/14
------
Socanmatic Package - Macro __ATOMIC_RELAXED undefined - changed simlink from /usr/bin/gcc to /usr/bin/gcc-4.8

2/4/14
------
Changed Makefile.am to add -lamino for linking the amino package 
- Socanmatic installed
- Reflex installed
- netcanft installed

2/6/14
------
- Installed ach-utils from ppa (sudo apt-get install ach-utils)
- To run the Powerball software:
/usr/local/etc/init.d/sns start (this starts the sns-log service)
- Next start the can402 driver:
can402 
- Finally,      

2/7/14
------
CANOpen Protocol:
- implements layers 3 - 7 of the OSI Model:
	(Network - Transport - Session - Presentation - Application)
- CANOpen Device Profile released in CiA 301 Specification  

Required Features to Comply with CANOpen Protocol:
- Communication Unit
- State Machine w/states Initialization, Pre-operational, Operational, Stopped
- Object Dictionary: array of variables with a 16-bit index
	- Allows device configuration
- Application - performs function of the device

- CIA 301 - Basic CANOpen Device/Communication Profiles
- CIA 401 - I/0 Modules
- CIA 402 - Motion Control

From can-cia.org request for 301 and 401  

